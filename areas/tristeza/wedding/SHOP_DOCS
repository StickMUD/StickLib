
********************Minx s Jewelry Shop***************************

	This shop allows the players to customize, purchase and 
deliver their wedding and engagement rings, without the 
interference of coders. This new system has three main advantages 
over the current system: 1) wedding and engagement rings can now 
be standard in both costs and options, 2) less memory usage, 
3) the first step in having official mud marriages (which is 
needed if we plan on switching to the  new  lord system proposed 
by Kelgath).
	I have tried to make the rings customizable, while 
utilizing the least amount of memory space. In the future I would 
like to code a chapel to go along with the rings, making the 
actual wedding standard as well.

	The way the ring works is quite simple. The customer 
gets the following choices:
	1) wedding or engagement ring
	2) metal type: silver, gold, platinum, mithral
	3) stone setting: none, diamond, sapphire, opal, 
		pearl, ruby, or emerald
	4) short description word: (lots to choose from)
		for example: beautiful, splendid, artistic, 
		charming...etc.
	5) one extra description line: (actually it s more like 
		a mushy description of what the ring represents)
		for example: This ring represents the only 
		happiness in life, to love and to be loved.
	6) the spouse to whom the ring will be given
	7) an inscription, no longer than 35 characters

These choices are saved in the int_arg (1-5 as an integers 
and 6&7 as a strings)
 
The rings currently have these commands and attributes:

help		describes the available commands
rich <mess> 	a two person channel (this command will only work 
		for one ring at a time)
showoff		shows off the ring to everyone in the room
divorce		destroys one's ring (but not the spouse's)
present		presents the ring to the spouse (can only be 
		done once)

enter messages	when one enters the game it tells one if thier 
		spouse is also there and sends a message to 
		the spouse
		
The shop is actually made up of three parts :
	The jewelry_shop.c (where the ordering commands are)
	The jeweler.c (uses catch alls to answer any 
		questions you may have)
		for example: <ask Gordon about rings>
		             <ask Gordon about prices>
	The ring.c (where all the ring commands are)
	In addition there is the ring_log, 
	which logs rings as they are purchased

I really hope everyone likes the rings. If there is anything 
I can do to make the rings better please feel free to mail me.

Many Thanks,
Minx
**********************************************************************

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@@@@@@@@@@@@@@@@@@@@@@@ Replacing Rings: @@@@@@@@@@@@@@@@@@@@@@@@

There are two different rings to replace...
	A) A ring that still needs to be presented to the permanent owner
	B) A ring that is worn by the permanent owner

For type A):

	using the string logged in ring_log:
	
	buyer: 0#0#0#0#0#spouse#inscription 
	minx: 0#0#0#0#0#kelgath#My one true love				

	To make a ring for Minx! (to still be given to Kelgath)
	1) lpc move_object(clone_object("/areas/tristeza/weddings/ring"),
			find_player("minx"));
	2) call /areas/tristeza/weddings/ring#clonenumber 
			create_ring 0#0#0#0#0#kelgath#My one true love#0

		(the #0 denotes it as a ring that still needs to be
		 given to the permanent owner)

For type B):

	To make a ring for Kelgath! (to be kept forever)
	1) lpc move_object(clone_object("/areas/tristeza/weddings/ring"),
			find_player("kelgath"));

	2) now in the init_arg string, 
		switch the name of the buyer for the spouse
		

	   call /areas/weddings/ring#clonenumber 
			create_ring 0#0#0#0#0#minx#My one true love#1

		(the #1 denotes it as a ring that has been given 
		 to the permanent owner)

Note:
	The player names in 1 & 2, should never be the same name.
	Usually, rings will probably be replaced for the permanent 
		owners. In this case, you be looking for the string
		in ring_log where the permanent owner's spouse is the
		the buyer.

I hope this makes sense!!!!!


Many Thanks,
Minx
