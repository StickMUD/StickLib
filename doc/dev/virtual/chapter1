
  Virtual objects.
  ----------------

	What are virtual objects? A virtual object is an object that
  has no predefined code. The code for this kind of object is defined
  during the execution of some defined virtual handler, server. The server
  attaches a code to a virtual filename. The virtual filename has no
  match with any physical files. The server controls the filenames and 
  attaches executable codes to accepted filenames. The server then returns 
  the virtual object.

  How is it done? In StickMUD you can open a directory called 'virtual'
  in your home directory. Any attempt of activating a non existent code
  under your virtual directory will cause a function call to your virtual
  server. The file '/players/foo/virtual/server.c" is your virtual server.
  If it does not exist, your virtual directory acts like a normal directory
  would. Virtual server has a function called 'compile_object'. This
  function is called every time you try to activate a non existent code
  under your virtual directory. The function returns an object that is
  to be attached to that non existent filename. Function returns zero if
  if it does not want to attach an object to that particular filename.
  Function 'compile_object' gets the non existent filename as argument so
  it knows what to do to it.


  Example:

          cd /players/tron/virtual
          clone this_is_a_non_existent_filename
          ok.
          
          Let us pretend that there was a virtual server in that
          directory and not any filename called like in the clone
          command. This activates the server and server clones an
          object from "/players/tron/quickt.c" for example and returns
          it to be attached to that non existent filename:
          "/players/tron/virtual/this_is_a_non_exitstent_filename".
          In this case you actually cloned "/players/tron/quickt".


  The idea of using virtual objects can be connected to several 
  purposes. I have used it to create a virtual room environment 
  where you can put your rooms on map and they are virtually cloned
  when a player moves in your world.

//Tron
