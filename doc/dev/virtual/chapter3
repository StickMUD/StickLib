

  Normal rooms in virtual environment.
  ------------------------------------

  Normal rooms can be implemented easily to the virtual environment.
  If you write your normal rooms to your rooms_home directory under
  specific coordinates it will override the virtual room. You just
  have to connect the dest_dir of your room to the virtual filenames
  if you want exits back to the virtual environment.

  Set the desired filename in format X_Y where X is x-coordinate and
  Y is y-coordinate.

  Example:  53_2.c

  The dest_dir could look like this:

       dest_dir = ({ "/players/tron/virtual/world/rooms/54_2", "east" });
 


  Using server.c and reseting configuration.
  ------------------------------------------

  
  To get your configurations in use you have to reset your server.
  Your server then makes a save file of the configured environment.
  
  How to do it:

  call server reset_server

  This function call will read your configuration files and create a
  new save file.

  call server reset_server 1

  This will load the saved configuration.

  Both of these will reboot your virtual world and recompile your 
  universum object and all your terrain types.

  To give players some time before resetting your world, you can use
  function reboot_world:

  call server reboot_world 5

  This will give players 5 minutes to get out or then to be transfered to
  church when the time runs out.

  call server reboot_world 0

  This will reboot immediately if no reboot sequence was running, if
  there was then this aborts it but does not reboot the world.


  General information.
  --------------------

  
  This system is under development and might change a bit during
  the time but I try to keep the changes small if not all transparent
  for your old codes. Also these help files do not tell everything
  about the server or the virtal room so your activity is needed to
  check out the source codes if you need to know more or then just
  ask me. Here are all the files:

  /room/virtual/virtual_room.c
  /obj/virtual/virtual_server.c
  /include/virtual_room.h

  Also there will be examples in directory /examples/virtual to show
  how to do things when you try to get started. In addition you can
  visit my experimental virtual area I have put up under directory
  /players/tron/virtual/world/rooms. Just try object 0_0 to get in
  square one :) It is a forest with some orcs and some drifting mist.
  
  I will code somekind of environment checking system as soon as I
  can so we can get rid of these dull 'obvious exits are: ...' things.
  Also I will code a configuring tool. With it you can put objects to
  different places just walking around in your area and configure your
  object locations that way. This tool will include a way too look at
  maps and different locations and it will show where players are. Any
  other ideas? :) These things will happen if I have time for it.

//Tron
