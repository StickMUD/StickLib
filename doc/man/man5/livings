NAME
	livings - functions that can be used with both players and monsters

DESCRIPTION
    basic/id.c:
	set_name(string n)
		Sets our basic name. This should always be done first.

    basic/living/pets.c:
	status set_master(object ob)
		ob will be our master, who we by default follow and defend.
		Following works regardless of msgout - it is not a catch_tell
		hack. set_master returns 1 if successful. It also
		automatically calls add_pet function from master
		(see /basic/living/pets.c).
		set_master(0) should be called if we want to stop being a pet.
	object query_master()
		returns the current master
	void set_follow_master(status x)
		If x is 1, we will follow our master when possible.
		set_master function sets this flag to 1.
	void set_defend_master(status x)
		If 1, we defend our master if he/she/it is attacked.
		set_master function sets this flag to 1.
		Player pets will never automatically defend!
	status query_follow_master()
		returns the current follow status
	status query_defend_master()
		returns 1 if we are defending our master

SEE ALSO
	armours, containers, doors, drinks, foods, livings,
	objects, players, monsters, rooms, torches, virtuals, weapons
