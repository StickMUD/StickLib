
NAME
	abilities

DESCRIPTION

	Living beings have permanent abilities in addition to current
	abilities. Current abilities are those which are used all the time.
	Permanent abilities will only have effect when the current abilities
	have been drained or magically enhanced.

	No magic, guild skills, potions or anything can restore drained
	abilities yet. Neither are they shown when player types score. Players
	will (perhaps) be able to notice that some of their abilities are not
	as they should be.

	Minimum ability is always 1, and maximum is MAX_ABILITY, defined in
	/obj/living.c.

USAGE

    Variables in /obj/living.c

		int Str, Dex, Con, Int;
		int max_Str, max_Dex, max_Con, max_Int;

    Functions in /obj/living.c

		set_stat(stat_nr, value), add_stat(stat_nr, change [, duration]
		[, item]), query_stat(stat_nr).
		Definitions for stat-values used as 'stat_nr' can be found from
		/include/stats.h.


	Returns the current abilities as an array: ({ str, dex, con, int })

		query_abilities()
		query_max_abilities()

	Does the same but returns the permanent abilities.

		query_str(), query_dex(), query_con(), query_int()

	Returns the _current_ ability.

		query_max_str(), query_max_dex() etc.

	Returns the permanent one.

EXAMPLES

	Your undead monster, Shadow, hits the player. You want to drain
	his strength by one when that happens.

		player_ob->add_stat(ST_STR, -1);

	Your potion of health boosts the player's ability temporarily by one.
	Note that we have to reduce it back to normal when the potion's effect
	ends. How do we do that? Easily. Standard living object has function
	'add_stat', which may take up to 4 arguments. As we want a timed
	stat boost, we need to use 3 first ones; but we'll use all 4 to show
	that boost isn't dependant on any object (more about object based
	boosts in other docs).

		player_ob -> add_stat(ST_CON, 1, 20, 0);
// Will last for 20 heart beats, approximately 40 seconds.

